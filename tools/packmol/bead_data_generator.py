#This file generate random points within a spherical cabity



import os
import numpy
from sys import argv
############### set parameters
# particle radius
particleRadius = 10.0;
# cell radius
cellRadius = 100.0;
# tolerance of random distribution
tol = 2.0 * particleRadius;
# volume fraction
phi = 0.05;

############## calculated parameters
# number of particles
num = round(phi / pow(particleRadius/cellRadius,3))


###################generate random particles within cell using packmol
print('---------------------->1/2 generate random coordinates from packmol')

####build cell.inp
packmol_input  = open("cell"+str(num)+".inp", 'w')
packmol_input.write("tolerance "+str(tol)+"\n")
packmol_input.write("output tmp.xyz\n")
packmol_input.write("filetype xyz\n")
packmol_input.write("structure spheres.xyz\n")
packmol_input.write("  number "+ str(num) +"\n")
packmol_input.write("  inside sphere 0. 0. 0. "+str(cellRadius-2)+"\n")
packmol_input.write("  radius "+str(particleRadius)+"\n")
packmol_input.write("end structure\n")
packmol_input.close()
####build sphere.xyz
packmol_input = open("spheres.xyz",'w');
packmol_input.write("1\n");#only one type of atom
packmol_input.write("spheres\n");
packmol_input.write("1 0 0 0\n");
packmol_input.close()

#run packmol
os.system("./packmol < cell"+str(num)+".inp")

##################convert tmp.xyz(from packmol) to bead_data_num_beads.in(pizza format)
datafile=open("bead_data_"+str(num)+"_beads.in", 'w');
datafile.write("LAMMPS FENE chain data file\n");
datafile.write(str(num)+" atoms\n");
datafile.write(str(num-1)+" bonds\n");
datafile.write("1 atom types\n1 bond types\n")
datafile.write(str(-cellRadius) + " "+str(cellRadius)+" xlo xhi\n")
datafile.write(str(-cellRadius) + " "+str(cellRadius)+" ylo yhi\n")
datafile.write(str(-cellRadius) + " "+str(cellRadius)+" zlo zhi\n")
datafile.write("\nMasses\n\n1 1.0\n");

#write points using data generated by packmol
datafile.write("\nAtoms\n\n");
tmp_xyz=numpy.loadtxt("tmp.xyz",skiprows=2)
bead_data=numpy.zeros((num,9)); # particle_id, chain_id(default=1),particle_type, coordinate_x, coordinate_y, coordinate_z, rotation_vec_x, rotation_vec_y, rotation_vec_z
for i in range(num):
	bead_data[i,0]=i+1;#particle_id
	bead_data[i,1]=1;#chain_id
	bead_data[i,2]=1;#particle_type
	for j in range(3):
		bead_data[i,j+3]=tmp_xyz[i,j+1]#coordinates
		bead_data[i,j+6]=0; #rotation vector (default,0)
numpy.savetxt('bead_data.txt',bead_data,fmt='%i %i %i %10.12f %10.12f %10.12f %i %i %i')
tmp = open("bead_data.txt",'r')
datafile.write(tmp.read())

#write bonds
datafile.write("\nBonds\n\n");
bond_data=numpy.zeros((num-1,4));
for i in range(num-1):
    bond_data[i,0]=i+1;#bond id
    bond_data[i,1]=1;#bond type
    bond_data[i,2]=i+1;#left atom connecting to bond (i+1)
    bond_data[i,3]=i+2;#right atom connecting to bond (i+1)
numpy.savetxt('bond_data.txt',bond_data,fmt='%i %i %i %i')
tmp = open("bond_data.txt",'r')
datafile.write(tmp.read())

datafile.close()
# remove packmil intermediate files
os.system("rm *.txt *.xyz *inp")
print ("\n---------------> we have generated lammps data file\n")
print ("\n\n------------------------------------------------------------------------------------------\n\n")
print ("particle Radius: "+str(particleRadius))
print ("cell Radius: "+str(cellRadius))
print ("number of particles: " + str(num))
print ("volume Fraction: "+str(phi)+"\n")
